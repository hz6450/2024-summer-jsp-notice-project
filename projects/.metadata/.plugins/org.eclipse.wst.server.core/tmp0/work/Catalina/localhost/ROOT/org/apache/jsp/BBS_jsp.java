/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.25
 * Generated at: 2024-07-18 04:20:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.io.PrintWriter;
import bbs.BbsDAO;
import bbs.Bbs;
import java.util.ArrayList;

public final class BBS_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(6);
    _jspx_imports_classes.add("java.io.PrintWriter");
    _jspx_imports_classes.add("bbs.Bbs");
    _jspx_imports_classes.add("bbs.BbsDAO");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<title>JSP 게시판 웹 사이트</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("#bbs-table {\r\n");
      out.write("    box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.1);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#bbs-table th, #bbs-table td {\r\n");
      out.write("    vertical-align: middle;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn-container {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: center; /* Center align buttons */\r\n");
      out.write("    margin-bottom: 20px; /* Add bottom margin for spacing */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".pagination-container {\r\n");
      out.write("    margin-top: 20px; /* Add top margin for spacing */\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: center; /* Center align pagination */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".pagination-container a {\r\n");
      out.write("    color: #007bff; /* Bootstrap primary link color */\r\n");
      out.write("    padding: 6px 12px;\r\n");
      out.write("    margin: 0 4px;\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("    border: 1px solid #007bff; /* Bootstrap primary border color */\r\n");
      out.write("    border-radius: 4px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".pagination-container .active a {\r\n");
      out.write("    background-color: #007bff; /* Bootstrap primary background color */\r\n");
      out.write("    color: #fff; /* White text for active link */\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");

String userID = null;
if (session.getAttribute("userID") != null) {
    userID = (String) session.getAttribute("userID");
}

int pageNumber = 1;
if (request.getParameter("pageNumber") != null) {
    pageNumber = Integer.parseInt(request.getParameter("pageNumber"));
}

String category = null;
if (request.getParameter("category") != null) {
    category = request.getParameter("category");
}

      out.write("\r\n");
      out.write("\r\n");
      out.write("<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n");
      out.write("    <a class=\"navbar-brand\" href=\"main.jsp\">JSP 게시판 웹 사이트</a>\r\n");
      out.write("    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n");
      out.write("            data-target=\"#bs-example-navbar-collapse-1\"\r\n");
      out.write("            aria-controls=\"bs-example-navbar-collapse-1\" aria-expanded=\"false\"\r\n");
      out.write("            aria-label=\"Toggle navigation\">\r\n");
      out.write("        <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("    </button>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"collapse navbar-collapse\"\r\n");
      out.write("         id=\"bs-example-navbar-collapse-1\">\r\n");
      out.write("        <ul class=\"navbar-nav mr-auto\">\r\n");
      out.write("            <li class=\"nav-item\"><a class=\"nav-link\" href=\"main.jsp\">메인</a>\r\n");
      out.write("            </li>\r\n");
      out.write("            <li class=\"nav-item active\"><a class=\"nav-link\" href=\"BBS.jsp\">게시판</a>\r\n");
      out.write("            </li>\r\n");
      out.write("        </ul>\r\n");
      out.write("    </div>\r\n");
      out.write("</nav>\r\n");
      out.write("\r\n");
      out.write("<div class=\"container mt-4\">\r\n");
      out.write("    <div class=\"btn-container\">\r\n");
      out.write("        <a href=\"BBS.jsp\">\r\n");
      out.write("            <button type=\"button\" class=\"btn btn-light\"\r\n");
      out.write("                    style=\"border: 1px solid black; margin: 10px;\">전체</button>\r\n");
      out.write("        </a> <a href=\"BBS.jsp?category=공지\">\r\n");
      out.write("        <button type=\"button\" class=\"btn btn-light\"\r\n");
      out.write("                style=\"border: 1px solid black; margin: 10px;\">공지</button>\r\n");
      out.write("    </a> <a href=\"BBS.jsp?category=질문\">\r\n");
      out.write("        <button type=\"button\" class=\"btn btn-light\"\r\n");
      out.write("                style=\"border: 1px solid black; margin: 10px;\">질문</button>\r\n");
      out.write("    </a> <a href=\"BBS.jsp?category=자유\">\r\n");
      out.write("        <button type=\"button\" class=\"btn btn-light\"\r\n");
      out.write("                style=\"border: 1px solid black; margin: 10px;\">자유</button>\r\n");
      out.write("    </a>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"row\">\r\n");
      out.write("        <table class=\"table table-striped\" id=\"bbs-table\">\r\n");
      out.write("            <thead>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th scope=\"col\" style=\"width: 15%\">No.</th>\r\n");
      out.write("                <th scope=\"col\" style=\"width: 15%\">종류</th>\r\n");
      out.write("                <th scope=\"col\" style=\"width: 30%\">제목</th>\r\n");
      out.write("                <th scope=\"col\" style=\"width: 20%\">작성일</th>\r\n");
      out.write("                <th scope=\"col\">조회수</th>\r\n");
      out.write("            </tr>\r\n");
      out.write("            </thead>\r\n");
      out.write("            <tbody>\r\n");
      out.write("            ");

            BbsDAO bbsDAO = new BbsDAO();
            ArrayList<Bbs> list = bbsDAO.getList(pageNumber, category);
            String BbsCategory = null;
            int listCount = bbsDAO.getNextPage(); //총 글 갯수

            for (int i = 0; i < list.size(); i++) {
            
      out.write("\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td>");
      out.print(list.get(i).getBbsId());
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print(list.get(i).getBbsCategory());
      out.write("</td>\r\n");
      out.write("                <td><a href=\"view.jsp?bbsID=");
      out.print(list.get(i).getBbsId());
      out.write('"');
      out.write('>');
      out.print(list.get(i).getBbsTitle());
      out.write("</a></td>\r\n");
      out.write("                <td>");
      out.print(list.get(i).getBbsDate().substring(0, 16).replace(" ", "<br>"));
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print(list.get(i).getBbsView());
      out.write("</td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            ");

            }
            
      out.write("\r\n");
      out.write("            </tbody>\r\n");
      out.write("        </table>\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"pagination-container\">\r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("        ");

        if (pageNumber > 1) {
        
      out.write("\r\n");
      out.write("        <a href=\"BBS.jsp?pageNumber=");
      out.print(pageNumber - 1);
      out.write("\"\r\n");
      out.write("           class=\"btn\">이전</a>\r\n");
      out.write("        ");

        }
        
      out.write("\r\n");
      out.write("\r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("        ");

        int totalPages = listCount / 5 + 1;
        int startPage = Math.max(1, pageNumber - 4);
        int endPage = Math.min(startPage + 9, totalPages);

        for (int i = startPage; i <= endPage; i++) {
            String activeClass = (i == pageNumber) ? "active" : "";
        
      out.write("\r\n");
      out.write("        <a href=\"BBS.jsp?pageNumber=");
      out.print(i);
      out.write("\"\r\n");
      out.write("           class=\"btn btn-light ");
      out.print(activeClass);
      out.write('"');
      out.write('>');
      out.print(i);
      out.write("</a>\r\n");
      out.write("        ");

        }
        
      out.write("\r\n");
      out.write("\r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("        ");

        if (totalPages > 1 && pageNumber < totalPages) {
        
      out.write("\r\n");
      out.write("        <a href=\"BBS.jsp?pageNumber=");
      out.print(pageNumber + 1);
      out.write("\"\r\n");
      out.write("           class=\"btn\">다음</a>\r\n");
      out.write("        ");

        }
        
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("    <a href=\"write.jsp\" class=\"btn btn-primary btn-write\">글쓰기</a>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@1.16.1/dist/umd/popper.min.js\"></script>\r\n");
      out.write("<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
